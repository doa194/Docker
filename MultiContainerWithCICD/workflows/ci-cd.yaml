name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AZURE_WEBAPP_NAME: "<AZURE_WEBAPP_NAME>"
  AZURE_WEBAPP_PACKAGE_PATH: "./publish"
  DOCKER_IMAGE_NAME: "webapi"
  REGISTRY: "ghcr.io/${{ github.repository_owner }}"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: mydb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: Restore dependencies
      run: dotnet restore src/WebApi/WebApi.csproj

    - name: Build
      run: dotnet build src/WebApi/WebApi.csproj --configuration Release --no-restore

    - name: Test
      run: dotnet test src/WebApi/WebApi.csproj --no-restore --verbosity normal

    - name: Publish
      run: dotnet publish src/WebApi/WebApi.csproj -c Release -o ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: ./src/WebApi
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure WebApp Deploy
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest